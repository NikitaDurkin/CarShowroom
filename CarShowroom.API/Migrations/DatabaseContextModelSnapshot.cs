// <auto-generated />
using System;
using CarShowroom.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CarShowroom.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CarShowroom.Database.Models.Car", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AutomaticTransmission");

                    b.Property<string>("Brand");

                    b.Property<string>("Client");

                    b.Property<string>("Color");

                    b.Property<bool>("Conditioner");

                    b.Property<bool>("CruiseControl");

                    b.Property<string>("DoorsNumber");

                    b.Property<string>("EnginePower");

                    b.Property<string>("EngineVolume");

                    b.Property<string>("Fuel");

                    b.Property<string>("FuelConsumption");

                    b.Property<bool>("GpsNavigator");

                    b.Property<string>("Interior");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Milage");

                    b.Property<string>("Model");

                    b.Property<string>("Price");

                    b.Property<bool>("Radio");

                    b.Property<string>("RegistryNumber");

                    b.Property<string>("SeatsNumber");

                    b.Property<DateTime>("TO");

                    b.Property<bool>("Video");

                    b.Property<string>("VolumeTrunk");

                    b.HasKey("Guid");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("9edb2ab6-0d09-4ca0-9e45-ed0760ffab32"),
                            AutomaticTransmission = true,
                            Brand = "Toyota",
                            Client = "Иванов Иван Иванович",
                            Color = "Black",
                            Conditioner = true,
                            CruiseControl = true,
                            DoorsNumber = "5",
                            EnginePower = "167",
                            EngineVolume = "2.4",
                            Fuel = "АИ-95",
                            FuelConsumption = "12",
                            GpsNavigator = true,
                            Interior = "Leather",
                            Manufacturer = "Япония",
                            Milage = "200000",
                            Model = "Camry",
                            Price = "600000",
                            Radio = true,
                            RegistryNumber = "А000АА00",
                            SeatsNumber = "5",
                            TO = new DateTime(2019, 6, 23, 11, 42, 9, 881, DateTimeKind.Local).AddTicks(2638),
                            Video = true,
                            VolumeTrunk = "300"
                        },
                        new
                        {
                            Guid = new Guid("6bcfee3e-f3b5-4446-90fa-d85bcd583e89"),
                            AutomaticTransmission = false,
                            Brand = "Mecedes-Benz",
                            Client = "Петров Петр Петрович",
                            Color = "Black",
                            Conditioner = true,
                            CruiseControl = true,
                            DoorsNumber = "5",
                            EnginePower = "345",
                            EngineVolume = "5.0",
                            Fuel = "АИ-95",
                            FuelConsumption = "20",
                            GpsNavigator = true,
                            Interior = "Leather",
                            Manufacturer = "Германия",
                            Milage = "200000",
                            Model = "E-classe",
                            Price = "600000",
                            Radio = true,
                            RegistryNumber = "А111АА11",
                            SeatsNumber = "5",
                            TO = new DateTime(2019, 6, 23, 11, 42, 9, 881, DateTimeKind.Local).AddTicks(8955),
                            Video = true,
                            VolumeTrunk = "300"
                        });
                });

            modelBuilder.Entity("CarShowroom.Database.Models.Client", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Phone");

                    b.HasKey("Guid");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CarShowroom.Database.Models.Order", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Client");

                    b.Property<Guid?>("ClientGuid");

                    b.Property<DateTimeOffset>("DateTime");

                    b.Property<string>("Status");

                    b.Property<bool>("TestDrive");

                    b.HasKey("Guid");

                    b.HasIndex("ClientGuid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CarShowroom.Database.Models.Order", b =>
                {
                    b.HasOne("CarShowroom.Database.Models.Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientGuid");
                });
#pragma warning restore 612, 618
        }
    }
}
